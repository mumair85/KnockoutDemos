@{
    ViewBag.Title = "Validation";
}

<h2>Validation using Extender</h2>

<div id="simpleValidation">
    <label>Enter a numeric value:</label>
    <input data-bind="textInput: attemptedValue" />

    <br />

    <label class="error" data-bind="visible: !lastInputWasValid()">That's not a number!</label>

    <br />
    <br />

    Accepted value: <span data-bind="text: acceptedNumericValue"></span>
</div>


<br />
<hr/>
<br />


<h2>KO Validation using Library</h2>

<i>
    https://github.com/Knockout-Contrib/Knockout-Validation <b>(Check out WIKI)</b>
</i>

<br />
<br />
<div id="koValidation">
    <label>String must start with 'u':</label>
    <input data-bind="value: attemptedValue" />

    <br />
    <br />

</div>

@section ExtraScripts
{
    <script>
        $(function () {
            function appViewModelSimple() {
                var self = this;

                self.acceptedNumericValue = ko.observable(123);
                self.lastInputWasValid = ko.observable(true);

                self.attemptedValue = ko.computed({
                    read: self.acceptedNumericValue,
                    write: function (value) {
                        if (isNaN(value))
                            self.lastInputWasValid(false);
                        else {
                            self.lastInputWasValid(true);
                            self.acceptedNumericValue(value);
                        }
                    }
                });

            }

            var ele = document.getElementById("simpleValidation");
            var modelSimple = new appViewModelSimple();
            ko.applyBindings(modelSimple, ele);



            ko.validation.init({
                insertMessages: true
            });

            ko.validation.rules['mustStartWith'] = {
                validator: function (val, otherVal) {
                    return val.substring(0, 1) === otherVal;
                },
                message: 'The value must start with \'{0}\''
            };
            ko.validation.registerExtenders();

            function appViewModelKo() {
                var self = this;

                self.attemptedValue = ko.observable("").extend({ mustStartWith: 'u' });

            }

            var modelKo = new appViewModelKo();
            ko.applyBindings(modelKo, document.getElementById("koValidation"));

            


        });
    </script>
}
